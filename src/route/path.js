function path(root, sublink) {
    return `${root}${sublink}`;
  }
  
  export const ROOTS = {
    root: "/dashboard",
    admin: "/admin",
    research: "/research",
    manage: "/manage",
    report: "/reports",
  };
  
  export const PATH_DASHBOARD = {
    root: ROOTS.root,
    admin: {
      manageUsers: path(ROOTS.admin, "/manageuser"),
      manageEmployees: path(ROOTS.admin, "/manageemployees"),
      country: path(ROOTS.admin, "/country"),
      state: path(ROOTS.admin, "/state"),
      city: path(ROOTS.admin, "/city"),
      locality: path(ROOTS.admin, "/locality"),
      LOB: path(ROOTS.admin, "/LOB"),
      service: path(ROOTS.admin, "/service"),
      payments: path(ROOTS.admin, "/payments"),
    },
    research: {
      prospect: path(ROOTS.research, "/prospect"),
      owner: path(ROOTS.research, "/owner"),
      educational: path(ROOTS.research, "/educational"),
      architect: path(ROOTS.research, "/architect"),
      mandals: path(ROOTS.research, "/mandals"),
      professionals: path(ROOTS.research, "/professionals"),
      coc: path(ROOTS.research, "/coc"),
      banks: path(ROOTS.research, "/banks"),
      friends: path(ROOTS.research, "/friends"),
      agent: path(ROOTS.research, "/agent"),
      employer: path(ROOTS.research, "/employer"),
      governmentDepartment: path(ROOTS.research, "/governmentdepartment"),
    },
    manage: {
      manageOrder: path(ROOTS.admin, "/manageOrder"),
      projectManagementInfo: path(ROOTS.admin, "/manageprojectinfo"),
      manageBuilder: {
        root: path(ROOTS.manage, "/manageBuilder"),
        contact: "/managebuilder/projects/:buildername",
        projects: "/managebuilder/contacts/:buildername",
      },
      bankStatement: path(ROOTS.manage, "/bankstatement"),
      clientInfo: path(ROOTS.manage, "/manageclientinfo"),
      clientProperty: path(ROOTS.manage, "/manageclientproperty"),
      clientReceipt: path(ROOTS.manage, "/manageclientreceipt"),
      llAgreement: path(ROOTS.manage, "/managellagreement"),
      pmaAgreement: path(ROOTS.manage, "/managepmaagreement"),
      orderReceipt: path(ROOTS.manage, "/manageorderreceipt"),
      clientInvoice: path(ROOTS.manage, "/manageclientinvoice"),
      vendor: path(ROOTS.manage, "/managevendor"),
      vendorInvoice: path(ROOTS.manage, "/managevendorinvoice"),
      vendorPayment: path(ROOTS.manage, "/managevendorpayment"),
    },
    reports : {
      orderPaymentList : path(ROOTS.report, "/orderPaymentList"),
      orderReceiptList : path(ROOTS.report, "/orderReceiptList"),
      orderInvoiceList : path(ROOTS.report, "/orderInvoiceList"),
      clientReceiptList : path(ROOTS.report, "/clientReceiptList"),
      vendorInvoiceList : path(ROOTS.report, "/vendorInvoiceList"),
      lobReceiptPayments : path(ROOTS.report, "/lobReceiptPayments"),
      entityReceiptPayments : path(ROOTS.report, "/entityReceiptPayments"),
      lobReceiptPaymentsConsolidated : path(ROOTS.report, "/lobReceiptPaymentsConsolidated"),
      pmaBillingTrendView : path(ROOTS.report, "/pmaBillingTrendView"),
      pmaClientReport : path(ROOTS.report, "/pmaClientReport"),
      pmaInvoiceList : path(ROOTS.report, "/pmaInvoiceList"),
      pmaClientReceivable : path(ROOTS.report, "/pmaClientReceivable"),
      activePmaAgreement : path(ROOTS.report, "/activePmaAgreement"),
      projectContact : path(ROOTS.report, "/projectContact"),
      advanceHoldingAmount : path(ROOTS.report, "/advanceHoldingAmount"),
      pmaClientStatementAll : path(ROOTS.report, "/pmaClientStatementAll"),
      pmaClientStatement : path(ROOTS.report, "/pmaClientStatement"),
      nonPmaClientStatement : path(ROOTS.report, "/nonPmaClientStatement"),
      nonPmaClientReceivables : path(ROOTS.report, "/nonPmaClientReceivables"),
      clientStatementAll : path(ROOTS.report, "/clientStatementAll"),
      duplicateClientReport : path(ROOTS.report, "/duplicateClientReport"),
      clientBankDetails : path(ROOTS.report, "/clientBankDetails"),
      monthlyBankSummary : path(ROOTS.report, "/monthlyBankSummary"),
      bankTransferReconciliation : path(ROOTS.report, "/bankTransferReconciliation"),
      clientOrderReceiptMismatchDetails : path(ROOTS.report, "/clientOrderReceiptMismatchDetails"),
      bankReceiptReconciliation : path(ROOTS.report, "/bankReceiptReconciliation"),
      bankPaymentReconciliation : path(ROOTS.report, "/bankPaymentReconciliation"),

    }
  };